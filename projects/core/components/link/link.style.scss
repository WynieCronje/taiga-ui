@import 'taiga-ui-local';

:host {
    @include clearbtn();
    @include transition(color);
    color: var(--tui-link);
    text-decoration: none;
    text-align: left;
    text-transform: inherit;
    font-weight: inherit;
    cursor: pointer;
    outline: none;

    &:hover {
        color: var(--tui-link-hover);
    }

    &[data-tui-host-mode='onLight'] {
        color: var(--tui-text-03);

        &:hover,
        &._active {
            color: var(--tui-text-01);
        }

        &._pseudo {
            color: var(--tui-text-01);

            &:hover,
            &._active {
                color: var(--tui-text-03);
            }
        }
    }

    &[data-tui-host-mode='onDark'] {
        color: var(--tui-text-03-night);

        &:hover,
        &:active,
        &._active {
            color: var(--tui-text-01-night);
        }

        &._pseudo {
            color: var(--tui-text-01-night);

            &:hover,
            &:active,
            &._active {
                color: var(--tui-text-03-night);
            }
        }
    }

    &[data-tui-host-mode='alert'] {
        color: var(--tui-negative);

        &:hover {
            color: var(--tui-negative-hover);
        }
    }

    &[data-tui-host-mode='success'] {
        color: var(--tui-positive);

        &:hover {
            color: var(--tui-positive-hover);
        }
    }
}

.content {
    display: inline-block;

    :host._focus-visible & {
        background: var(--tui-selection);
    }

    :host[data-tui-host-mode='onLight']._focus-visible & {
        background: var(--tui-text-01);
        color: var(--tui-base-01);
    }

    :host[data-tui-host-mode='onDark']._focus-visible & {
        background: var(--tui-base-01);
        color: var(--tui-text-01);
    }

    :host[data-tui-host-mode='success']._focus-visible & {
        background: var(--tui-success-bg);
    }

    :host[data-tui-host-mode='alert']._focus-visible & {
        background: var(--tui-error-bg);
    }

    :host._pseudo & {
        @include dashed-border($color: currentColor, $alignment: 1.15em);
        padding-bottom: 0.15em;
    }
}

.icon {
    @include transition(transform);
    margin-top: -2px;
    opacity: 0.8;

    &_left {
        margin-right: $space;
    }

    &_right {
        margin-left: $space;
    }

    :host._hovered & {
        opacity: 1;
    }

    :host._icon-rotated & {
        transform: rotate(180deg);
    }
}
